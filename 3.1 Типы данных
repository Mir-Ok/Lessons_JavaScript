Подробности https://learn.javascript.ru/types

Что может означать 01000001 - ASCII код буквы А или же число 65, оно же 0b01000001
Что комп нас понял, надо придать смысл, что определит доступный набор операций.
Т.е. присвоить тип

Строковый тип:
-----------------
-----------------

let single = 'single-quoted';
let double = "double-quoted";

Обратные кавычки аналогичны f-строке, в нее мы сможем вставлять произвольные выражения, обернув их в ${…}
могут занимать больше одной строки:
function sum(a, b) {
  return a + b;
}
alert(`1 + 2 = ${sum(1, 2)}.`); // 1 + 2 = 3.

Обратные кавычки также позволяют задавать «шаблонную функцию» перед первой обратной кавычкой. 
Используемый синтаксис: func`string`. 
Автоматически вызываемая функция func получает строку и встроенные в неё выражения и может их обработать. 
Подробнее об этом можно прочитать в документации.


Спецсимволы: \n 	Перевод строки, \t 	Знак табуляции, \', \" 	Кавычки (экранирование)
------------------

Длина строки (это свойство, аналог метода, не функция, без () ):  alert( `My\n`.length ); // 3
------------------

Доступ к символам (срезы)
-------------------------

let str = `Hello`;

// получаем первый символ
alert( str[0] ); // H, если пусто - вернет undefined
alert( str.charAt(0) ); // H - устарело, если пусто - вернет пустоту

// получаем последний символ
alert( str[str.length - 1] ); // o

Перебор строки посимвольно: 
----------------------------

for (let char of "Hello") {
  alert(char); // H,e,l,l,o (char — сначала "H", потом "e", потом "l" и т. д.)
}

Изменение регистра, индексация, поиск в строке и пр. методы https://learn.javascript.ru/string


Логические операторы https://learn.javascript.ru/logical-operators (примеры внизу ОГОНЬ)
----------------------
----------------------

|| (ИЛИ) хотя бы одно из всех истина, находит первое истинное и на этом заканчивает перебор
result = a || b;

&& (И) все должны быть истина, находит первое ложное и на этом заканчивает перебор

Приоритет оператора && больше, чем у ||

! (НЕ)



Условное ветвление: if, '?'  (https://learn.javascript.ru/ifelse)
-----------------------------
-----------------------------

Инструкция if(...) вычисляет условие в скобках и, если результат true, то выполняет блок кода.
Инструкция if (…) вычисляет выражение в скобках и преобразует результат к логическому типу.
- Число 0, пустая строка "", null, undefined и NaN становятся false. 
  Из-за этого их называют «ложными» («falsy») значениями.
- Остальные значения становятся true, поэтому их называют «правдивыми» («truthy»).

if (year == 2015) alert( 'Вы правы!' );

if (year == 2015) {
  alert( "Правильно!" );
  alert( "Вы такой умный!" );
}

if (year < 2015) {
  alert( 'Это слишком рано...' );
} else if (year > 2015) {
  alert( 'Это поздновато' );
} else {
  alert( 'Верно!' );
}


Сокращенная запись:
-------------------
Было
if (age > 18) {
  accessAllowed = true;
} else {
  accessAllowed = false;
}
Стало
let accessAllowed = (age > 18) ? true : false;
(схема let result = условие ? значение1 : значение2;)

// то же самое, т.к. сравнение само по себе уже возвращает true/false
let accessAllowed = age > 18;

Мы рекомендуем использовать фигурные скобки {} всегда, когда вы используете инструкцию if, 
даже если выполняется только одна команда. Это улучшает читаемость кода.


Конструкция "switch"  (https://learn.javascript.ru/switch)
----------------------
----------------------

Аналог else elif if 
