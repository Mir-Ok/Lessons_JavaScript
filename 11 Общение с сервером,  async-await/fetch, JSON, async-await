В зависимости от сложности и динамичности сайта есть два варианта:
- генерация готового html-кода на самом сервере
- создание DOM-дерева на клиенте при помощи JavaScript

Откуда получить то, чего в коде нет? Курс валют, список товаров и пр.
Например, мы создаем магазин.
Попробуем обратится к серверу и скачать из него данные для магазина.

В сети есть липовые серверы, откуда можно стянуть данные
Например, https://gorest.co.in/
Предоставляет API для получения товаров, клиентов, например
https://gorest.co.in/public/v2/users

Браузер не позволит посылать какие попало запросы.
Например, из консоли Яндекса нельзя обратиться к Гуглу. есть ограничения.

Чтобы ограничения обойти, на стороне сервера можно установить специальные
заголовки ответа, которое покажут браузеру, что сервер безопасен
CORS - доступ к ресурсу между разными источниками
Подробнее 

Используемый нами сервис на каждый запрос вернет такие заголовки

---------------------------------
Откроем консоль браузера и при помощи функции fetch() отправим запрос

fetch('https://gorest.co.in/public/v2/users')

Откроем вкладку Network (Сеть) и в ней увидим тот самый файл users,
щелкнем на него, увидим вкладки Заголовки, Предварительный просмотр.
В подавляющем большинстве случаев мы от сервера получаем данные в формате xml, yaml, 
json (javascript object notation, в нем используются только двойные кавычки)

Если адрес вбить прямо, а не отправить по неему запрос, мы получим простыню сплошного
текста.
Во вкладке Сеть наоборот все красиво разобрано, и даже есть интерфейс для изучения.

----------------------------------

Попробуем из программы отправить запрос на сервер (дополнить список товаров) и получить ответ.
Первый параметр - адрес куда слать, второй - свойства передаваемого объекта

fetch('https://gorest.co.in/public/v2/users', {
    // метод для создания нового товара
    method: 'POST',
    // все параметры собираем в словарь и переводим в строку
    body: JSON.stringify({
        name: 'banana',
        price: 50,
        description: 'yammy!',
        status: true,
        image: 'banana-image',
    }),
    // в заголовках токен и формат содержимого body 
    headers: {
        Authorization: 'Bearer jdf45d56f5df45df5d45vd54fd54v5dv5d4xv',
        'Content-Type': 'application/json'
    }
})
